(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{164:function(t,e,i){"use strict";i.r(e);var n=i(0),a=Object(n.a)({},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"content"},[this._m(0),e("p",[this._v("A project starts with a certain requirement, but as it progresses and\ngoes to the development cycle, it adds more feedback. It means\ndiscovering and learning about new use cases, requiring features that we\nwere not specifically considered in the original design and its\nassumptions.A software life cycle model depicts the significant phases\nor activities of a software project from conception until the product is\nretired. Typically, a life cycle model addresses the phases of a\nsoftware project: requirements phase, design phase, implementation,\nintegration, testing, operations and maintenance. The motivation behind\nutilizing a life cycle model is to provide structure. As always, it's a\nmatter of picking the right tool for the job, rather than picking up\nyour hammer and treating everything as a nail. Smile is a tool that\neases control of the life cycle of a project.")]),this._m(1),e("ul",[e("li",[e("router-link",{attrs:{to:"./introduction.html"}},[this._v("Introduction")])],1),e("li",[e("router-link",{attrs:{to:"./getting-started/getting-started.html"}},[this._v("Getting Started")])],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"welcome-to-smile-s-documentation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#welcome-to-smile-s-documentation","aria-hidden":"true"}},[this._v("#")]),this._v(" Welcome to Smile's documentation!")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"site-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#site-map","aria-hidden":"true"}},[this._v("#")]),this._v(" Site Map")])}],!1,null,null,null);e.default=a.exports}}]);