(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{168:function(e,t,n){"use strict";n.r(t);var s=n(0),a=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),n("p",[e._v("Software life cycle models describe the interrelationships between\nsoftware development phases. The common life cycle models are:")]),n("p",[n("strong",[e._v("Waterfall:")]),e._v(" In this type of development, each of the stages\n(requirements, design, development, and test) are separate and do not\noverlap. Each stage has a set of exit criteria which must be met\nbefore the next stage can begin.")]),n("p",[n("strong",[e._v("Extreme programming:")]),e._v(" Waterfall model does not work with shifting\nrequirement, in XP, coding starts as early as possible to detect\nEmergent design.")]),n("p",[n("strong",[e._v("V-Shaped:")]),e._v(" The V-Shaped model is the same as the Waterfall model\nexcept that testing is a consideration throughout the development.\nEach stage of development is matched with its equivalent stage in\ntesting: Requirements-System testing, High-level design-Integration\ntesting, Detailed design-Unit testing.")]),n("p",[n("strong",[e._v("Prototyping:")]),e._v(" Prototyping consists of developing a partial\nimplementation of the system to give the users a feel for what the\ndeveloper has in mind. The users then give feedback on what they think\nof the prototype - what works and what doesnâ€™t - and the developer can\nmake changes more easily and efficiently.")]),n("p",[n("strong",[e._v("Incremental:")]),e._v(" Here, system is developed in different stages, with\neach stage consisting of requirements, design, development, and test\nphases. In each stage, new functionality is added. This type of\ndevelopment allows the user to see a functional product very quickly\nand allows the user to impact what changes are included in subsequent\nreleases.")]),n("p",[n("strong",[e._v("Spiral:")]),e._v(" The Spiral model of development, each spiral addresses a\nset of major risks that have been identified. Each spiral consists of:\ndetermining objectives, alternatives, and constraints, identifying and\nresolving risks, evaluating alternatives, developing deliverables,\nplanning the next iteration.")]),n("p",[e._v("Smile follows a merged model of Incremental and Extreme programming.")]),n("p",[n("strong",[e._v("Specification :")]),e._v(" Smile way of information capturing is done with k\nfiles.")]),n("p",[n("strong",[e._v("Data Store")]),e._v(" kslick/kmongo\n:   Relational, Mongo")]),n("p",[n("strong",[e._v("Script")]),e._v(" kscript")]),n("p",[n("strong",[e._v("Stream")]),e._v(" kstream")])])}],!1,null,null,null);t.default=a.exports}}]);