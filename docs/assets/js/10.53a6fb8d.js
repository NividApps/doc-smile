(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{184:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"domain-module"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#domain-module","aria-hidden":"true"}},[t._v("#")]),t._v(" Domain Module")]),n("h2",{attrs:{id:"what-is-the-need-for-a-domain-module"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-need-for-a-domain-module","aria-hidden":"true"}},[t._v("#")]),t._v(" What is the need for a domain module?")]),n("p",[t._v("Domain module that defines the building blocks of the project. It has the actual operations that are needed to run the business.")]),n("ol",[n("li",[t._v("Separating the read from the write, binds the specific concerns with clear boundaries. Read about CQRS to know more. https://martinfowler.com/bliki/CQRS.html")]),n("li",[t._v("Thereby, enables us to write bug free, high quality code by ensuring that the writes are guarded well.")]),n("li",[t._v("What is a bounded context?")])]),n("h2",{attrs:{id:"creating-a-domain-module"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-domain-module","aria-hidden":"true"}},[t._v("#")]),t._v(" Creating a domain module")]),n("ol",[n("li",[t._v("Open Mould.ksmile file and add the domain module definition as follows")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("section learning {\n\tdata-module LearningData at com.metastay.learningdata\n\tmongo-module LearningMongo(LearningData) at com.metastay.leaningmongo\n\tdomain-module LearningDomain(LearningMongo) at com.metastay.learningdomain\n}\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("Run smile command in sbt")]),n("li",[t._v("refresh the project in eclipse.")]),n("li",[t._v("You will see the "),n("code",[t._v("LearningDomain.kdomain")]),t._v(" file generated.")])]),n("h2",{attrs:{id:"defining-a-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defining-a-command","aria-hidden":"true"}},[t._v("#")]),t._v(" Defining a command")]),n("ol",[n("li",[t._v("Open LearningDomain.kdomain in eclipse")]),n("li",[t._v("Create a command set (bounded-context) for Company apis & with it, define a command to create/register a new company.")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("command-set Company {\n\t\tcommand registerCompany{\n\t\tinput(companyName:String, address:String)\n\t\toutput(companyId:Id)\n\t}\n}\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("Compile the code in sbt")]),n("li",[t._v("Open intelliJ and you should see a file by name CompanyCommandSetCode.scala generated with a method registerCompany defined and ready to be implemented.")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" CompanyCommandSetCode"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("domainLogicRef"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v("DomainLogicRef"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" CompanyCommandSetCommands "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" registerCompany "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" RegisterCompanyCommand "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RegisterCompanyCommand"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n        input"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Input "),n("span",{attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("?")]),n("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// Output()")]),t._v("\n     "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"5"}},[n("li",[t._v("Implement the command: copy the code written in LearningMongoObject class's createCompany api and change it as follows:")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" registerCompany "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" RegisterCompanyCommand "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RegisterCompanyCommand"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n input"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Input "),n("span",{attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n   "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" companyId "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Id\n   "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" companyRow "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CompanyRow"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n     name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("companyName"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     address "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   CompanyWriter"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insert"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("companyRow"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   Output"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("companyId "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" companyId"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"safe-guard-your-commands-with-preconditions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#safe-guard-your-commands-with-preconditions","aria-hidden":"true"}},[t._v("#")]),t._v(" Safe-guard your commands with preconditions")]),n("ol",[n("li",[t._v("Open LearningDomain.kdomain file in eclipse")]),n("li",[t._v("Add a check on companyName's length during registration")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('command registerCompany{\n\t\tinput(companyName:String, address:String)\n\t\tpre {\n\t\t\tcondition companyNameValid => `input.companyName.length >= 5` \n\t\t\t\tfailing "Company name must have at least 5 characters"\n\t\t}\n\t\toutput(companyId:Id)\n\t}\n')])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("Ensure the code compiles.")])]),n("h2",{attrs:{id:"using-domain-logic-functions-in-pre-condition"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-domain-logic-functions-in-pre-condition","aria-hidden":"true"}},[t._v("#")]),t._v(" Using domain-logic functions in pre-condition")]),n("ol",[n("li",[n("p",[t._v("Add a check to ensure the company is not already registered:")]),n("ul",[n("li",[t._v("Open "),n("code",[t._v("LearningDomain.kdomain")]),t._v(" file in eclipse")]),n("li",[t._v("Define a "),n("strong",[t._v("domain-logic")]),t._v(" & a "),n("strong",[t._v("function companyNameExists")])])])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("domain-logic Company {\n\tfunction companyNameExist(name:String):Boolean\n}\n")])])]),n("ul",[n("li",[t._v("Define a "),n("strong",[t._v("domain-ref")]),t._v(" inside the command set "),n("strong",[t._v("Company")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("command-set Company {\n\tdomain-logic-ref companyDomainRef:Company\n\tcommand registerCompany{...}\n}\n")])])]),n("ul",[n("li",[t._v("Add the check in the command")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('command registerCompany{\n\tinput(companyName:String, address:String)\n\t\tpre {\n\t\t  \tcondition companyNameValid => `input.companyName.length >= 5` failing "Company name must have at least 5 characters"\n\t  \t\tcondition companyNameMustBeUnique => !companyDomainRef.companyNameExist(input.companyName) failing "Company is already registered"\n\t\t}\n\toutput(companyId:Id) \n}\n')])])]),n("ul",[n("li",[t._v("Ensure the code compiles.")]),n("li",[t._v("Implement the domain logic function\na.\tOpen the domain logic code file in intelliJ - "),n("code",[t._v("CompanyDomainLogicCode.scala")]),t._v("\nb.\timplement companyNameExist method")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" CompanyDomainLogicCode "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" CompanyDomainLogic "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" companyNameExist"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("Boolean")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CompanyQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsIgnoreCase"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"defining-post-conditions-for-testing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defining-post-conditions-for-testing","aria-hidden":"true"}},[t._v("#")]),t._v(" Defining post conditions for testing")]),n("ol",[n("li",[t._v("Open "),n("code",[t._v("LearningDomain.kdomain")]),t._v(" file in eclipse")]),n("li",[t._v("Add a check to ensure the company got registered")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('command registerCompany{\ninput(companyName:String, address:String)\npre {\n\t condition companyNameValid => `input.companyName.length >= 5` failing "Company name must have at least 5 characters"\n\t condition companyNameMustBeUnique => !companyDomainRef.companyNameExist(input.companyName) failing "Company is already registered"\n\t}\n\toutput(companyId:Id)\n\tpost {\n\t condition companyRegistered => companyDomainRef.companyNameExist(input.companyName) failing "Company not registered"\n\t}\n}\n')])])]),n("h2",{attrs:{id:"invoking-a-command-from-outside"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#invoking-a-command-from-outside","aria-hidden":"true"}},[t._v("#")]),t._v(" Invoking a command from outside")]),n("ol",[n("li",[t._v("In order call a command, you need to grab the commandSet and then call the command. Use the Now() variant of the command to start with.")]),n("li",[t._v("Open file "),n("code",[t._v("LearningDomainTestSuite")]),t._v(" and call the command from the test case as follows:")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token operator"}},[t._v("<<")]),n("span",{attrs:{class:"token operator"}},[t._v("<<")]),n("span",{attrs:{class:"token operator"}},[t._v("<<")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" HEAD\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" LearningDomainTestSuite "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v("==")]),n("span",{attrs:{class:"token operator"}},[t._v("==")]),n("span",{attrs:{class:"token operator"}},[t._v("==")]),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" LearningDomainTestSuite "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{attrs:{class:"token operator"}},[t._v(">>>")]),n("span",{attrs:{class:"token operator"}},[t._v(">>>")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("68")]),t._v("a8b60e0f359e256d7582f2d291872fe0fad08e\n\ttest"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"call command"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Tag"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"register"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tprintln"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Calling registerCompany command..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" output "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  grab"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CompanyCommandSet"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("registerCompanyNow"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("companyName "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"I3 Software Pvt Lab"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"HSR, Bangalore"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tassert"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isSuccess"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\toutput"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("println"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Command Output: "')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("Run the test & check if the company has got created in the database")])]),n("h2",{attrs:{id:"command-testing-using-fixtures"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#command-testing-using-fixtures","aria-hidden":"true"}},[t._v("#")]),t._v(" Command testing using fixtures")]),n("ol",[n("li",[t._v("Open the command fixture test suite in intelliJ: "),n("code",[t._v("RegisterCompanyCommandTestSuite")])]),n("li",[t._v("Write a test to ensure successful creation of a company")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[t._v("test"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"register a new company"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Tag"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"register-new"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t grab"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RegisterCompanyCommandFixture"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("checker"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Input"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"New Company"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"India"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expectPostPass\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("Run the test in sbt")])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LearningDomain"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" test-only *RegisterCompanyCommandTestSuite -- -n register-new\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" RegisterCompanyCommandTestSuite:\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - register a new company\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ScalaTest\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Run completed "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 1 second, 501 milliseconds.\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("If you run the test again it will fail since the company got created in the db from the earlier test case, so you must clean the db for every test run")]),n("li",[t._v("Dropping the collection before each test is run:")])]),n("ul",[n("li",[t._v("Add the following code to your test suite:")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" beforeEach"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testData"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" TestData"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("Unit")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),n("span",{attrs:{class:"token keyword"}},[t._v("super")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beforeEach"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testData"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t CompanyWriter"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("drop"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("note")]),n("p",[t._v("alternately you can also override afterEach method for the same.")])]),n("ol",{attrs:{start:"6"}},[n("li",[t._v("Now you can run the test any number of times without failure as the company collection gets cleared before each test run.")])]),n("h2",{attrs:{id:"testing-the-pre-conditions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#testing-the-pre-conditions","aria-hidden":"true"}},[t._v("#")]),t._v(" Testing the pre-conditions")]),n("ol",[n("li",[t._v("Verify if the command fails when we try to register with a name less than 5 characters")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[t._v("test"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"create a company with invalid name"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Tag"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"invalid-name"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" companyName "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"New"')]),t._v("\n\t grab"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RegisterCompanyCommandFixture"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("checker"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Input"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("companyName"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"India"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expectPreFailOnly"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"companyNameValid"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("Run the test case")])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LearningDomain"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" test-only *RegisterCompanyCommandTestSuite -- -n invalid-name\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" RegisterCompanyCommandTestSuite:\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" - create a company with invalid name\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ScalaTest\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Run completed "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 1 second, 31 milliseconds.\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Total number of tests run: 1\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Suites: completed 1, aborted 0\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Tests: succeeded 1, failed 0, canceled 0, ignored 0, pending 0\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("info"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" All tests passed.\n\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);