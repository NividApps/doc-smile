(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{167:function(t,a,n){"use strict";n.r(a);var s=n(0),o=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"lottery-phase-ii"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lottery-phase-ii","aria-hidden":"true"}},[t._v("#")]),t._v(" Lottery Phase II")]),n("h2",{attrs:{id:"lottery-domain-module"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lottery-domain-module","aria-hidden":"true"}},[t._v("#")]),t._v(" Lottery Domain Module")]),n("h3",{attrs:{id:"create-lottery-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-lottery-command","aria-hidden":"true"}},[t._v("#")]),t._v(" 'Create Lottery' Command")]),n("ul",[n("li",[t._v("Add a domain module in "),n("code",[t._v("Lottery.ksmile")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("domain-module LotteryDomain at com.metastay.lotterydomain\n")])])]),n("ul",[n("li",[t._v("$smile")]),n("li",[t._v("Refresh Eclipse to see "),n("code",[t._v("LotteryDomain.kdomain")])]),n("li",[t._v("Add Lottery.create Command in "),n("code",[t._v("LotteryDomain.kdomain")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('domain-logic Lottery {\n    function lotteryNameExists(lotteryName:String):Boolean\n}\n  \ncommand-set Lottery {\n    domain-logic-ref lottery:Lottery\n    command create {\n        input(lotteryName:String, amount:Int)\n        pre {\n            condition NewLotteryName => !(lottery.lotteryNameExists(input.lotteryName)) failing "Lottery name already exists!"\n        }\n    }\n}\n')])])]),n("ul",[n("li",[t._v("$compile")]),n("li",[t._v("Open "),n("code",[t._v("LotteryCommandSetCode")]),t._v(" to save it to implement.")])]),n("div",{staticClass:"warning custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),n("p",[t._v("LotteryWriter and other mongo related files not available to implement because LotteryDomain is not dependent on LotteryMongo.")])]),n("ul",[n("li",[t._v("Add the LotteryMongo dependency in LotteryDomain in "),n("code",[t._v("Lottery.ksmile")]),t._v(" file")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("section Lottery {\n    data-module LotteryData at com.metastay.lottery\n    mongo-module LotteryMongo at com.metastay.lotterymongo\n    domain-module LotteryDomain(LotteryMongo) at com.metastay.lotterydomain\n    play-module LotteryPlay(LotteryData, LotteryMongo) at lotteryplay\n}\n")])])]),n("ul",[n("li",[t._v("$smile")]),n("li",[t._v("Open "),n("code",[t._v("LotteryCommandSetCode")]),t._v(" to implement create command as below.")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" create "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CreateCommand "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" CreateCommand"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    input"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Input "),n("span",{attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n    LotteryWriter"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LotteryRow"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" open "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("Open "),n("code",[t._v("LotteryDomainLogicCode")]),t._v(" to implement lotteryNameExists method as below")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" lotteryNameExists "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),n("span",{attrs:{class:"token builtin"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),n("span",{attrs:{class:"token builtin"}},[t._v("Boolean")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LotteryQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists \n")])])]),n("ul",[n("li",[t._v("$compile")]),n("li",[t._v("Write test in "),n("code",[t._v("LotteryDomainTestSuite")]),t._v(" as below.")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[t._v("test"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"create"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Tag"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"create"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" lotteryCommandSet"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" grab"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LotteryCommandSet"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    lotteryCommandSet"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createNow"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"WBLoto"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("20000")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("println"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("$project LotteryDomain")]),n("li",[t._v("$test-only com.metastay.lotterydomain.LotteryDomainTestSuite -- -n create")]),n("li",[t._v("Check in DB if the WBLoto Lottery has been created")])]),n("h3",{attrs:{id:"add-participant-and-run-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add-participant-and-run-command","aria-hidden":"true"}},[t._v("#")]),t._v(" 'Add Participant' And 'Run'Command")]),n("p",[t._v("Adding two more commands to "),n("code",[t._v("LotteryDomain.kdomain")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('domain-logic Lottery {\n    function lotteryNameExists(lotteryName:String):Boolean\n    function participantExist(lotteryName:String, participantName:String):Boolean\n    function participantCount(lotteryName:String):Int\n}\n  \ncommand-set Lottery {\n    domain-logic-ref lottery:Lottery\n    command create {\n        input(lotteryName:String, amount:Int)\n        pre {\n            condition NewLotteryName => !(lottery.lotteryNameExists(input.lotteryName)) failing "Lottery name already exists!"\n        }\n    }\n     \n    command addParticipant {\n        input(lotteryName:String, participantName:String)\n        pre {\n            condition lotteryMustExists "Lottery must exist" => lottery.lotteryNameExists(input.lotteryName)\n            condition particpantNotYetAdded "Participant Not yet added" => \n                !lottery.participantExist(input.lotteryName, input.participantName)\n             \n        }\n    }\n     \n    command run {\n        input(lotteryName:String)\n        pre {\n            condition ExistingLotteryName => lottery.lotteryNameExists(input.lotteryName) failing "Lottery name does not exists"\n            condition atLeastTwoParticipants => \n                ExistingLotteryName -> `domainLogicRef.lottery.participantCount(input.lotteryName) > 1` \n                failing "The lottery does not have any participant!"            \n        }\n        output(winner:String)\n    }\n     \n}\n')])])]),n("ul",[n("li",[t._v("$compile")]),n("li",[t._v("Implementing addParticipant() and run() in "),n("code",[t._v("LotteryCommandSetCode")])])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" LotteryCommandSetCode"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("domainRef"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" DomainRef"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" LotteryCommandSetCommands "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("         \n  "),n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" create "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CreateCommand "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" CreateCommand"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    input"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Input "),n("span",{attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n      LotteryWriter"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LotteryRow"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amount"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("     \n \n  "),n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" addParticipant "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" AddParticipantCommand "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" AddParticipantCommand"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    input"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Input "),n("span",{attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" q "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LotteryQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" u "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LotteryUpdate"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("participantList"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addToSet"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("participantName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      LotteryWriter"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateOne"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" run "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" RunCommand "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RunCommand"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    input"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" Input "),n("span",{attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" q "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LotteryQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" participantList "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" q"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findOne"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("participantList "),n("span",{attrs:{class:"token comment"}},[t._v("//To find the participantList")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" winnerIndex "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" scala"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Random"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextInt"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("participantList"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("//To find a winner Index")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" winner "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" participantList"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winnerIndex"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{attrs:{class:"token keyword"}},[t._v("val")]),t._v(" u "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LotteryUpdate"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("winner"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Some"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winner"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("open"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      LotteryWriter"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateOne"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      Output"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winner"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("         \n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),n("ul",[n("li",[t._v("Implementing participantExist() and participantCount() in "),n("code",[t._v("LotteryDomainCode")])])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" lotteryNameExists "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),n("span",{attrs:{class:"token builtin"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),n("span",{attrs:{class:"token builtin"}},[t._v("Boolean")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    LotteryQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equalsIgnoreCase"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" participantExist"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" participantName"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("Boolean")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n    LotteryQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("participantList"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contains"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("participantName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" participantCount"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    LotteryQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findOne"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("participantList"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size\n")])])]),n("ul",[n("li",[t._v("Add test for addParticipant and run in "),n("code",[t._v("RunCommandTestSuite")])]),n("li",[t._v("$project LoteryDomain")]),n("li",[t._v("$test-only com.metastay.lotterydomain.commandset.lottery.RunCommandTestSuite -- -n run")])]),n("h2",{attrs:{id:"integrate-play-and-domain"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#integrate-play-and-domain","aria-hidden":"true"}},[t._v("#")]),t._v(" Integrate Play and Domain")]),n("ul",[n("li",[t._v("Adding all the validations and checks which are available in domain to the rest api.")]),n("li",[t._v("Add LotteryDomain as a dependency to LotteryPlay Module rather than LotteryMongo in "),n("code",[t._v("Lottery.ksmile")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("domain-module LotteryDomain(LotteryMongo) at com.metastay.lotterydomain\nplay-module LotteryPlay(LotteryData, LotteryDomain) at lotteryplay\n")])])]),n("ul",[n("li",[t._v("$smile")]),n("li",[t._v("Replace the actions by command-action to link it to command in "),n("code",[t._v("LotteryPlay.kplay")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("web-writer Lottery {\n    command-action createLottery(POST) LotteryDomain::Lottery.create\n    command-action addParticipant(POST) LotteryDomain::Lottery.addParticipant\n    command-action run(POST) LotteryDomain::Lottery.run\n}\n")])])]),n("ul",[n("li",[t._v("$compile")]),n("li",[t._v("Delete the "),n("code",[t._v("LotteryWebWriterCode.scala")]),t._v(" as its not more needed.")]),n("li",[t._v("$compile")]),n("li",[t._v("test through curl\n"),n("ul",[n("li",[t._v('curl -H "Content-Type: application/json" -X POST -d \'{"lotteryName":"Loto","amount":1000}\' http://localhost:9000/api/lottery/create-lottery')]),n("li",[t._v('curl -H "Content-Type: application/json" -X POST -d \'{"lotteryName":"Loto","participantName":"John"}\' http://localhost:9000/api/lottery/add-participant')]),n("li",[t._v('curl -H "Content-Type: application/json" -X POST -d \'{"lotteryName":"Loto","participantName":"Jim"}\' http://localhost:9000/api/lottery/add-participant')]),n("li",[t._v('curl -H "Content-Type: application/json" -X POST -d \'{"lotteryName":"Loto","participantName":"Joe"}\' http://localhost:9000/api/lottery/add-participant')]),n("li",[t._v('curl -H "Content-Type: application/json" -X POST -d \'{"lotteryName":"Loto"}\' http://localhost:9000/api/lottery/run')])])])]),n("h2",{attrs:{id:"enhancement"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enhancement","aria-hidden":"true"}},[t._v("#")]),t._v(" Enhancement")]),n("ul",[n("li",[t._v("Add a pre to the command run, that if the lottery is closed than it cannot run.")]),n("li",[t._v("Add another function to domain Lottery in "),n("code",[t._v("LotteryDomain.kdomain")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("domain-logic Lottery {\n    function isOpenToRun(lotteryName:String):Boolean\n}\n")])])]),n("ul",[n("li",[n("p",[t._v("Add the pre to the run command")])]),n("li",[n("p",[t._v("Change Lottery command-set under "),n("code",[t._v("LotteryDomain.kdomain")])])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('command run {\n    input(lotteryName:String)\n    pre {\n        condition NotYetRun => lottery.isOpenToRun(input.lotteryName) failing "it has already run!"\n        condition ExistingLotteryName => \n            lottery.lotteryNameExists(input.lotteryName) failing "Lottery name does not exists"\n        condition atLeastTwoParticipants => \n            ExistingLotteryName -> `domainLogicRef.lottery.participantCount(input.lotteryName) > 1` \n            failing "The lottery does not have any participant!"\n    }\n    output(winner:String)\n}\n')])])]),n("ul",[n("li",[t._v("$compile")]),n("li",[t._v("Implement "),n("code",[t._v("LotteryDomainLogicCode")]),t._v(" isOpenToRun")])]),n("div",{staticClass:"language-scala extra-class"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" isOpenToRun"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("String")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("Boolean")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LotteryQuery"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lotteryName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("open"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists\n")])])]),n("ul",[n("li",[t._v("run and test with swagger or curl")])])])}],!1,null,null,null);a.default=o.exports}}]);