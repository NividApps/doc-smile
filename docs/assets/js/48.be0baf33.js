(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{152:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"build-and-deploy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-and-deploy","aria-hidden":"true"}},[e._v("#")]),e._v(" Build And Deploy")]),t("h2",{attrs:{id:"project-build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#project-build","aria-hidden":"true"}},[e._v("#")]),e._v(" Project Build:")]),t("h3",{attrs:{id:"environment-specific-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#environment-specific-configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Environment specific configuration")]),t("p",[e._v("Based on the value of env in env.properties, the right set of\nconfiguration values would be used while running Smile. there are two\ntypes of data for configuration")]),t("ul",[t("li",[e._v("Data - read from moduleName.conf file")]),t("li",[e._v("Binders - Guice binding")])]),t("p",[e._v("Data for the env-name is is defined as <env-name>.<module-name>.conf\n=> prod.sampledata.conf Binders : ProdSampleBinders.scala where you\ndefine the guice binding.")]),t("h3",{attrs:{id:"server-mode-vs-interactive-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-mode-vs-interactive-mode","aria-hidden":"true"}},[e._v("#")]),e._v(" Server Mode vs Interactive Mode")]),t("h2",{attrs:{id:"release-process-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#release-process-setup","aria-hidden":"true"}},[e._v("#")]),e._v(" Release process Setup:")]),t("ol",[t("li",[e._v("install java.")]),t("li",[e._v("create a release folder, inside release folder:")]),t("li",[e._v('create a folder named "shipped"')]),t("li",[e._v('create a folder named “backup" (optional)')]),t("li",[e._v("create a deploy.sh with the following")])]),t("div",{staticClass:"language-{.sourceCode .html} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('RELEASE_ARTIFACT=“<release-name>”\nRELEASE_FOLDER=“<release-folder-name>"\necho "moving old zip to backup/"\nrm -rf backup/*\nmv $RELEASE_ARTIFACT.zip backup/\necho "deleting old releases"\nrm -rf $RELEASE_FOLDER\necho "copying release zip here"\ncp ./shipped/$RELEASE_ARTIFACT.zip .\nunzip $RELEASE_ARTIFACT.zip\necho "renaming release zip"\nmv $RELEASE_ARTIFACT $RELEASE_FOLDER\nchmod +x $RELEASE_FOLDER/bin/*\nchmod +x $RELEASE_FOLDER/*\n')])])]),t("ol",{attrs:{start:"6"}},[t("li",[e._v("create a start-server.sh")])]),t("div",{staticClass:"language-{.sourceCode .scala} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('RELEASE_FOLDER=“<release-folder-name>"\nAPP_NAME=“<app-name>”\nENV_NAME=“<env>”\nRELEASE_DIR_PATH=“<absolute-path-of-release-dir>”\nnohup ./$RELEASE_FOLDER/bin/$APP_NAME -Dsmile.env=$ENV_NAME -Dpidfile.path=$RELEASE_DIR_PATH/$APP_NAME.pid "$@" &\n')])])]),t("ol",{attrs:{start:"7"}},[t("li",[e._v("create a stop-server.sh")])]),t("div",{staticClass:"language-{.sourceCode .scala} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('APP_NAME="crash"\nkill `cat ./$APP_NAME.pid`\n')])])]),t("h2",{attrs:{id:"deploying-the-application"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploying-the-application","aria-hidden":"true"}},[e._v("#")]),e._v(" Deploying the application:")]),t("ol",[t("li",[e._v("go to project-home & build the release zip:")])]),t("div",{staticClass:"language-{.sourceCode .scala} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$project-home>sbt smile clean; prepare; generate; compile; release \n")])])]),t("p",[e._v("or in case of a bundle")]),t("blockquote",[t("div",{staticClass:"language-{.sourceCode .scala} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$project-home>sbt smile clean; prepare; generate; compile;\n$project-home>release-bundle <bundle-name>\n")])])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("copy/ship the release zip to the “shipped” folder inside release.\nex:")])]),t("div",{staticClass:"language-{.sourceCode .scala} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$project-home>cp release/<release-name>.zip <release-folder-path>/shipped\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("goto release folder, deploy & start server:")])]),t("div",{staticClass:"language-{.sourceCode .scala} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("run ./deploy.sh\nrun ./start-server.sh\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("to stop server")])]),t("div",{staticClass:"language-{.sourceCode .scala} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("run ./stop-server.sh\n")])])])])}],!1,null,null,null);a.default=r.exports}}]);